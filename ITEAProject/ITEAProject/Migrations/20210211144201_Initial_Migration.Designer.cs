// <auto-generated />
using System;
using ITEAProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITEAProject.Migrations
{
    [DbContext(typeof(IteaProjectDbContext))]
    [Migration("20210211144201_Initial_Migration")]
    partial class Initial_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ITEAProject.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1 Sobornyj ave. Zaporizhzhya"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2 Yavornytskogo ave. Dnipro"
                        },
                        new
                        {
                            Id = 3,
                            Address = "3 Khreschshatyk str. Kyiv"
                        });
                });

            modelBuilder.Entity("ITEAProject.Models.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BreedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breeds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BreedDescription = "Description1",
                            BreedName = "German Shepherd"
                        },
                        new
                        {
                            Id = 2,
                            BreedDescription = "Description2",
                            BreedName = "Bigl"
                        },
                        new
                        {
                            Id = 3,
                            BreedDescription = "Description3",
                            BreedName = "French Bulldog"
                        });
                });

            modelBuilder.Entity("ITEAProject.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "23, Yablochnaya Street, Zaporizhzhya",
                            OwnerName = "Ivanov I.I.",
                            Phone = "+380661234567"
                        },
                        new
                        {
                            Id = 2,
                            Address = "35, Myra Street, Vinnitsya",
                            OwnerName = "Petrov A.I.",
                            Phone = "+380950001144"
                        },
                        new
                        {
                            Id = 3,
                            Address = "90, Shevchenko Street, Kharkiv",
                            OwnerName = "Golovanova I.O.",
                            Phone = "+380939339393"
                        });
                });

            modelBuilder.Entity("ITEAProject.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("BreedId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 3,
                            BranchId = 1,
                            BreedId = 2,
                            Gender = 2,
                            PetName = "Berta"
                        },
                        new
                        {
                            Id = 2,
                            Age = 1,
                            BranchId = 1,
                            BreedId = 1,
                            Gender = 1,
                            PetName = "Joe"
                        },
                        new
                        {
                            Id = 3,
                            Age = 2,
                            BranchId = 2,
                            BreedId = 3,
                            Gender = 1,
                            PetName = "Nick"
                        },
                        new
                        {
                            Id = 4,
                            Age = 3,
                            BranchId = 2,
                            BreedId = 1,
                            Gender = 1,
                            PetName = "Rex"
                        },
                        new
                        {
                            Id = 5,
                            Age = 3,
                            BranchId = 3,
                            BreedId = 2,
                            Gender = 2,
                            PetName = "Knopa"
                        },
                        new
                        {
                            Id = 6,
                            Age = 3,
                            BranchId = 3,
                            BreedId = 2,
                            Gender = 1,
                            PetName = "Toby"
                        });
                });

            modelBuilder.Entity("ITEAProject.Models.Pet", b =>
                {
                    b.HasOne("ITEAProject.Models.Branch", null)
                        .WithMany("Pets")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITEAProject.Models.Breed", null)
                        .WithMany("Pets")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITEAProject.Models.Owner", null)
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("ITEAProject.Models.Branch", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("ITEAProject.Models.Breed", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("ITEAProject.Models.Owner", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
